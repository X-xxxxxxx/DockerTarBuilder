name: Get-AMD64-Docker-Images-Release

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '输入镜像列表（英文逗号分隔）'
        required: true
        default: 'alpine:latest'

jobs:
  pull_and_package:
    runs-on: ubuntu-22.04
    steps:
      - name: 初始化清理
        run: |
          # 清理所有Docker资源
          docker system prune -a -f --volumes
          # 清空Docker临时目录
          sudo rm -rf /var/lib/docker/tmp/*
          # 删除残留文件
          sudo rm -rf "$GITHUB_WORKSPACE/docker-images"

      - name: 拉取并分卷压缩镜像
        run: |
          set -eo pipefail
          images="${{ github.event.inputs.docker_images }}"
          IFS=',' read -r -a image_array <<< "$images"
          
          mkdir -p "$GITHUB_WORKSPACE/docker-images"

          for image in "${image_array[@]}"; do
            echo "==== 处理镜像: $image ===="
            
            # 强制清理旧数据
            docker rmi "$image" 2>/dev/null || true
            sudo rm -f "$GITHUB_WORKSPACE/docker-images/${image//[^a-zA-Z0-9._-]/_}-amd64.tar*"

            # 流式拉取-保存-压缩-分卷（无中间文件）
            docker pull --platform linux/amd64 "$image" && \
            docker save "$image" | \
            pigz -9 | \
            split -d -b 1500M - "$GITHUB_WORKSPACE/docker-images/${image//[^a-zA-Z0-9._-]/_}-amd64.tar.gz.part."

            # 立即删除镜像释放空间
            docker rmi "$image"
          done

      - name: 上传分卷到Release
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: docker-amd64-$(date +%s)
          files: |
            docker-images/*
          body: |
            ### 合并命令
            ```bash
            cat *.part.* > full.tar.gz
            docker load -i full.tar.gz
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 最终清理
        if: always()
        run: |
          docker system prune -a -f
          sudo rm -rf "$GITHUB_WORKSPACE/docker-images"
